# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_stores.ipynb.

# %% auto 0
__all__ = ['Mutable', 'mutable']

# %% ../nbs/01_stores.ipynb 18
from sveltish.stores import writable, StoreProtocol, Subscriber, Unsubscriber, Readable, Writable

# %% ../nbs/01_stores.ipynb 19
class Mutable(Writable):
    def __init__(self, **kw):
        self.__clsName = kw.pop('clsName', 'dict')
        self.__store = writable(kw)
    def __call__(self): return self.__store()
    def __repr__(self) -> str:
        return f"{self.__store}".replace('dict', str(self.__clsName))
    def __str__(self) -> str:
        return str(self.__store)
    def __getattr__(self, k:str):
        try:
            return self.__store.get()[k]
        except:
            raise AttributeError(k)
    def __setattr__(self, k:str,v) -> None:
        if f'_{self.__class__.__name__}_' in k: super().__setattr__(k,v)
        else: self.__store.set(self.__store.get() | {k:v})
    def subscribe(self, callback:Subscriber) -> Unsubscriber:
        return self.__store.subscribe(callback)
    def set(self, v) -> None: return self.__store.set(v)
    def update(self, fn) -> None: return self.__store.update(fn)

# %% ../nbs/01_stores.ipynb 23
def mutable(value):
    return Mutable(**value, clsName=value.__class__.__name__)
